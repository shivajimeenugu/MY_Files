function onSheetChange(workbook: ExcelScript.Workbook, args: ExcelScript.ChangeEventArgs) {
  // Define the main sheet name
  const mainSheetName = "MainSheet";

  // List of sheet names to monitor
  const monitoredSheets = ["Sheet1", "Sheet2"];

  // Check if the change is in a monitored sheet
  if (monitoredSheets.indexOf(args.sheet.getName()) !== -1) {
    // Handle additions or changes in the first column
    if (args.changeType === ExcelScript.ChangeType.CellEdit && args.range.column === 1) {
      for (const cell of args.range.values) {
        if (cell.length > 0) {
          const newSheetName = cell;

          // Check if the sheet name already exists
          const existingSheet = workbook.getWorksheets().find(sheet => sheet.getName() === newSheetName);

          // If the sheet does not exist, create it
          if (!existingSheet) {
            const newSheet = workbook.getWorksheets().addAfter(workbook.getWorksheets().getActive());
            newSheet.setName(newSheetName);

            // Create a back icon with hyperlink to main sheet
            const backShape = newSheet.addShape(ExcelScript.ShapeType.LeftArrow, 10, 10, 50, 50);
            backShape.getTextFrame().setText("Back");
            newSheet.addHyperlink(backShape, "", `'${mainSheetName}'!A1`, "Back");
          }

          // Add a hyperlink in the cell to the new sheet
          cell.addHyperlink("", `'${newSheetName}'!A1`, newSheetName);
        }
      }
    }
  }
}

function onSheetBeforeDelete(workbook: ExcelScript.Workbook, sheet: ExcelScript.Worksheet) {
  // List of sheet names to monitor
  const monitoredSheets = ["Sheet1", "Sheet2"];

  // Check if the sheet being deleted is a monitored sheet
  if (monitoredSheets.indexOf(sheet.getName()) !== -1) {
    // Iterate over each cell in the first column
    for (const cell of sheet.getRange("A:A").getValues()) {
      if (cell.length > 0) {
        const targetSheetName = cell;

        // Check if the sheet name exists and delete it
        const targetSheet = workbook.getWorksheets().find(sheet => sheet.getName() === targetSheetName);
        if (targetSheet) {
          workbook.getSheets().delete(targetSheet);
        }
      }
    }
  }
}
